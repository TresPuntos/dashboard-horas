#!/bin/bash

# Script para subir c√≥digo despu√©s de crear el repositorio en GitHub
# Ejecutar despu√©s de crear el repositorio manualmente

echo "üöÄ SUBIENDO C√ìDIGO A GITHUB"
echo "============================"
echo ""

# Verificar que estamos en el directorio correcto
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: No est√°s en el directorio del proyecto"
    exit 1
fi

# Verificar que estamos en un repositorio Git
if [ ! -d ".git" ]; then
    echo "‚ùå Error: No est√°s en un repositorio Git"
    exit 1
fi

echo "‚úÖ Directorio del proyecto correcto"
echo ""

# Configuraci√≥n del repositorio
REPO_NAME="dashboard-cliente"
GITHUB_USER="trespuntoscomunicacion"
REPO_URL="https://github.com/${GITHUB_USER}/${REPO_NAME}.git"

echo "üìã Configuraci√≥n del repositorio:"
echo "‚Ä¢ Nombre: $REPO_NAME"
echo "‚Ä¢ Usuario/Org: $GITHUB_USER"
echo "‚Ä¢ URL: $REPO_URL"
echo ""

# Configurar remote origin
echo "üì° Configurando remote origin..."
git remote remove origin 2>/dev/null || true
git remote add origin "$REPO_URL"

echo "‚úÖ Remote origin configurado"
echo ""

# Verificar estado actual
echo "üìä ESTADO ACTUAL:"
echo "‚Ä¢ Commits: $(git log --oneline | wc -l | tr -d ' ') commits"
echo "‚Ä¢ Rama: $(git branch --show-current)"
echo "‚Ä¢ Archivos modificados: $(git status --porcelain | wc -l | tr -d ' ')"
echo ""

# Verificar conexi√≥n con GitHub
echo "üîç Verificando conexi√≥n con GitHub..."
if git ls-remote origin >/dev/null 2>&1; then
    echo "‚úÖ Conexi√≥n exitosa con GitHub"
else
    echo "‚ùå No se puede conectar con GitHub"
    echo ""
    echo "üìã VERIFICAR QUE EL REPOSITORIO EXISTE:"
    echo "1. Ve a: https://github.com/$GITHUB_USER/$REPO_NAME"
    echo "2. Aseg√∫rate de que el repositorio existe"
    echo "3. Si no existe, cr√©alo en: https://github.com/new"
    echo ""
    echo "üìã CONFIGURACI√ìN DEL REPOSITORIO:"
    echo "‚Ä¢ Nombre: $REPO_NAME"
    echo "‚Ä¢ Descripci√≥n: Dashboard Cliente - Tres Puntos Comunicaci√≥n"
    echo "‚Ä¢ Visibilidad: P√∫blico"
    echo "‚Ä¢ NO marques 'Add a README file'"
    exit 1
fi

# Subir c√≥digo
echo "üöÄ Subiendo c√≥digo a GitHub..."
git push -u origin main

if [ $? -eq 0 ]; then
    echo "‚úÖ C√≥digo subido exitosamente"
    echo ""
    echo "üéâ ¬°REPOSITORIO CONFIGURADO!"
    echo ""
    echo "üìã PR√ìXIMOS PASOS:"
    echo ""
    echo "1. üîê CONFIGURAR SECRETS PARA DESPLIEGUE AUTOM√ÅTICO:"
    echo "   ‚Ä¢ Ve a: https://github.com/$GITHUB_USER/$REPO_NAME/settings/secrets/actions"
    echo "   ‚Ä¢ Haz clic en 'New repository secret'"
    echo "   ‚Ä¢ A√±ade estos secrets:"
    echo "     ‚Ä¢ SERVER_HOST = trespuntoscomunicacion.es"
    echo "     ‚Ä¢ SERVER_USER = cursor"
    echo "     ‚Ä¢ SERVER_PASSWORD = 5#!OWwzue465&OO(N5"
    echo "     ‚Ä¢ SERVER_PORT = 22"
    echo ""
    echo "2. ‚úÖ VERIFICAR DESPLIEGUE AUTOM√ÅTICO:"
    echo "   ‚Ä¢ Ve a: https://github.com/$GITHUB_USER/$REPO_NAME/actions"
    echo "   ‚Ä¢ El workflow se ejecutar√° autom√°ticamente"
    echo "   ‚Ä¢ Verifica que el despliegue sea exitoso"
    echo ""
    echo "3. üéØ VERIFICAR DASHBOARD:"
    echo "   ‚Ä¢ URL: https://trespuntoscomunicacion.es/db-clientes/"
    echo "   ‚Ä¢ Prueba la integraci√≥n con Toggl API"
    echo ""
    echo "4. üß™ PROBAR INTEGRACI√ìN TOGGL:"
    echo "   ‚Ä¢ Abre la consola del navegador (F12)"
    echo "   ‚Ä¢ Ve a Settings > Integraci√≥n Toggl"
    echo "   ‚Ä¢ A√±ade tu API Key real de Toggl"
    echo "   ‚Ä¢ Observa los logs detallados en consola"
    echo ""
    echo "üîó ENLACES √öTILES:"
    echo "‚Ä¢ Repositorio: https://github.com/$GITHUB_USER/$REPO_NAME"
    echo "‚Ä¢ Actions: https://github.com/$GITHUB_USER/$REPO_NAME/actions"
    echo "‚Ä¢ Dashboard: https://trespuntoscomunicacion.es/db-clientes/"
    echo "‚Ä¢ Secrets: https://github.com/$GITHUB_USER/$REPO_NAME/settings/secrets/actions"
else
    echo "‚ùå Error subiendo c√≥digo"
    echo ""
    echo "üìã SOLUCIONES POSIBLES:"
    echo "1. Verificar que el repositorio existe en GitHub"
    echo "2. Verificar permisos de acceso"
    echo "3. Intentar con SSH en lugar de HTTPS"
    echo ""
    echo "üîß COMANDO ALTERNATIVO:"
    echo "git push -u origin main --force"
fi
