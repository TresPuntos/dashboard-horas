#!/bin/bash

# Script para configurar el repositorio con tu usuario personal de GitHub
# Ejecutar desde: /Users/jordi/Documents/GitHub/Dashboard-v3/dashboard-cliente

echo "üîß CONFIGURANDO REPOSITORIO CON TU USUARIO PERSONAL"
echo "=================================================="
echo ""

# Verificar que estamos en el directorio correcto
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: No est√°s en el directorio correcto"
    echo "Ejecuta desde: /Users/jordi/Documents/GitHub/Dashboard-v3/dashboard-cliente"
    exit 1
fi

echo "‚úÖ Directorio correcto: dashboard-cliente"
echo ""

# Solicitar el nombre de usuario de GitHub
echo "üìã CONFIGURACI√ìN DEL REPOSITORIO:"
echo ""
read -p "¬øCu√°l es tu nombre de usuario de GitHub? " GITHUB_USERNAME

if [ -z "$GITHUB_USERNAME" ]; then
    echo "‚ùå Error: Debes proporcionar tu nombre de usuario de GitHub"
    exit 1
fi

# Configurar el nuevo remote
REPO_NAME="dashboard-cliente"
NEW_REPO_URL="https://github.com/${GITHUB_USERNAME}/${REPO_NAME}.git"

echo ""
echo "üì° Configurando nuevo remote..."
echo "‚Ä¢ Usuario: $GITHUB_USERNAME"
echo "‚Ä¢ Repositorio: $REPO_NAME"
echo "‚Ä¢ URL: $NEW_REPO_URL"
echo ""

# Remover el remote actual y configurar el nuevo
git remote remove origin 2>/dev/null || true
git remote add origin "$NEW_REPO_URL"

echo "‚úÖ Remote configurado: $NEW_REPO_URL"
echo ""

# Verificar estado actual
echo "üìä ESTADO ACTUAL:"
echo "‚Ä¢ Commits: $(git log --oneline | wc -l | tr -d ' ') commits"
echo "‚Ä¢ Rama: $(git branch --show-current)"
echo "‚Ä¢ Archivos modificados: $(git status --porcelain | wc -l | tr -d ' ')"
echo ""

echo "üìã PR√ìXIMOS PASOS:"
echo ""
echo "1. üÜï CREAR REPOSITORIO EN GITHUB:"
echo "   ‚Ä¢ Ve a: https://github.com/new"
echo "   ‚Ä¢ Nombre: $REPO_NAME"
echo "   ‚Ä¢ Descripci√≥n: Dashboard Cliente - Tres Puntos Comunicaci√≥n"
echo "   ‚Ä¢ Visibilidad: Public"
echo "   ‚Ä¢ NO marques 'Add a README file'"
echo "   ‚Ä¢ Haz clic en 'Create repository'"
echo ""
echo "2. üöÄ SUBIR C√ìDIGO:"
echo "   ‚Ä¢ Ejecuta: git push -u origin main"
echo "   ‚Ä¢ O usa GitHub Desktop para publicar"
echo ""
echo "3. üîê CONFIGURAR SECRETS PARA DESPLIEGUE:"
echo "   ‚Ä¢ Ve a: https://github.com/$GITHUB_USERNAME/$REPO_NAME/settings/secrets/actions"
echo "   ‚Ä¢ A√±ade estos secrets:"
echo "     ‚Ä¢ SERVER_HOST = trespuntoscomunicacion.es"
echo "     ‚Ä¢ SERVER_USER = cursor"
echo "     ‚Ä¢ SERVER_PASSWORD = 5#!OWwzue465&OO(N5"
echo "     ‚Ä¢ SERVER_PORT = 22"
echo ""
echo "4. ‚úÖ VERIFICAR DESPLIEGUE AUTOM√ÅTICO:"
echo "   ‚Ä¢ Ve a: https://github.com/$GITHUB_USERNAME/$REPO_NAME/actions"
echo "   ‚Ä¢ El workflow se ejecutar√° autom√°ticamente"
echo ""
echo "5. üéØ PROBAR DASHBOARD:"
echo "   ‚Ä¢ URL: https://trespuntoscomunicacion.es/db-clientes/"
echo "   ‚Ä¢ Prueba la integraci√≥n con Toggl API"
echo ""

echo "üéâ ¬°CONFIGURACI√ìN COMPLETADA!"
echo ""
echo "üìÅ Archivos listos para subir:"
echo "‚Ä¢ ‚úÖ C√≥digo fuente completo con correcciones de Toggl API"
echo "‚Ä¢ ‚úÖ GitHub Actions para despliegue autom√°tico"
echo "‚Ä¢ ‚úÖ Documentaci√≥n completa"
echo "‚Ä¢ ‚úÖ Build files de producci√≥n"
echo ""

echo "üîó Enlaces √∫tiles:"
echo "‚Ä¢ Crear repositorio: https://github.com/new"
echo "‚Ä¢ Tu repositorio: https://github.com/$GITHUB_USERNAME/$REPO_NAME"
echo "‚Ä¢ Secrets: https://github.com/$GITHUB_USERNAME/$REPO_NAME/settings/secrets/actions"
echo "‚Ä¢ Actions: https://github.com/$GITHUB_USERNAME/$REPO_NAME/actions"
echo "‚Ä¢ Dashboard: https://trespuntoscomunicacion.es/db-clientes/"
